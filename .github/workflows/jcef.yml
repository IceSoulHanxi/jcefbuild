name: Publish Latest Releases

on:
  schedule:
    - cron: '0 12 */2 * *'   # Every other day at 12pm
  push:
    paths: ['.github/workflows/jcef.yml']
    branches: master

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps: 
      - name: "Checkout JCEF-BUILD"
        uses: actions/checkout@v2
        with: 
          path: jcef-build

      - name: "Checkout JCEF"
        uses: actions/checkout@v2
        with:
          path: jcef
          repository: 'chromiumembedded/java-cef'
      
      - name: "Latest Published Release and Latest CEF Release"
        run: |
          cd $GITHUB_WORKSPACE/jcef-build
          git fetch --tags
          echo "::set-env name=LATEST_BUILD_VERSION::$(git describe --tags --abbrev=0 | egrep -io '([0-9]+\.?){3}\+g\w+\+chromium-([0-9]+\.?){4}')"
          echo "::set-env name=LATEST_JCEF_VERSION::$(./make-release-version.sh $GITHUB_WORKSPACE/jcef)"
        shell: bash

      - name: "Compare Versions"
        if: success()
        run: |
          import os
          from pkg_resources import parse_version
          build_version = os.environ.get('LATEST_BUILD_VERSION')
          jcef_version  = os.environ.get('LATEST_JCEF_VERSION')
          result = "::set-env name=NEW_RELEASE::{}".format(bool(parse_version(build_version) < parse_version(jcef_version)))
          print (result)
        shell: python
      
      - name: "Create New Release"
        if: env.NEW_RELEASE == 'True'
        id: create-release
        run: |-
          cd $GITHUB_WORKSPACE/jcef-build
          export NEW_RELEASE_TAG="$(git describe --tags --abbrev=0 | egrep -io '^v([0-9]+\.?){3}')-$LATEST_JCEF_VERSION"
          echo "::debug ::NEW RELEASE: $NEW_RELEASE_TAG"
          status="$(jq --null-input --compact-output \
                        '.tag_name=env.NEW_RELEASE_TAG | .name=env.NEW_RELEASE_TAG' \
                        '.body="## Changes summary:"' | \
                      curl --url https://api.github.com/repos/${{ github.repository }}/releases \
                               --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                               --silent --show-error --write-out '%{http_code}\n' \
                               --output /dev/stderr \
                               --data '@-')"
          [[ "$status" == '201' ]]
        shell: bash

      - name: Prepare Pages Generation
        if: env.NEW_RELEASE == 'True'
        run: |
          cd "$GITHUB_WORKSPACE/jcef"
          git apply --verbose "$GITHUB_WORKSPACE/jcef-build/patch/build-tools.patch"

      - name: Build Pages
        if: env.NEW_RELEASE == 'True'
        run: |
          cd "$GITHUB_WORKSPACE/jcef/tools"
          ./make_docs.sh
          cd "$GITHUB_WORKSPACE/jcef-build/packaging"
          ./gradlew --no-daemon -DBIN_ARTIFACT="$GITHUB_WORKSPACE/jcef/out/" -DARCH_DIST="" --info installDocsDist

      - name: Deploy Pages
        if: env.NEW_RELEASE == 'True'
        uses: crazy-max/ghaction-github-pages@v1.2.5
        with:
          target_branch: gh-pages
          build_dir: jcef-build/packaging/build/install/java-cef-build-docs
        env:
          GITHUB_PAT: ${{ secrets.TR_GITHUB_TOKEN }}  
