plugins {
    id 'java'
}

// Checks in order: the environment, or a system property
def arch_dist="${System.env.ARCH_DIST ?: System.properties.ARCH_DIST}"
def artifact=file("${System.env.BIN_ARTIFACT ?: System.properties.BIN_ARTIFACT ?: "$bin_artifact"}/$arch_dist")

task jcefjars(type: Zip) {
    description = "Zips up all the jars required for jcef to run"
    archiveBaseName = provider {'jcef-jars'}
    destinationDir = file("$buildDir/$arch_dist")

    from (fileTree("$artifact/bin")) {
        include '**/*.jar'
        exclude '**/jcef-tests.jar'
        eachFile {
            relativePath new RelativePath(true, name)
        }
        caseSensitive = false
        includeEmptyDirs = false
    }
}

task jcefdocs(type: Zip) {
    description = "Creates a zip of the javadocs"
    archiveBaseName = provider {'jcef-docs'}
    destinationDir = file("$buildDir/$arch_dist")

    from (fileTree("$artifact/docs")) {
        includeEmptyDirs = false
    }
}

task jcefblobs(type: Zip) {
    description = "Combines and zips all the blobs as dictated in the README.txt"

    archiveBaseName = provider {'jcef-blobs'}
    destinationDir = file("$buildDir/$arch_dist")

    from (fileTree("$artifact/bin/lib/$arch_dist")) {
        include 'libjcef.so', 'jcef_helper', 'libcef.so', 'icudtl.dat',
                'natives_blob.bin', 'snapshot_blob.bin'
        include 'locales/**/*'
        include 'cef*.pak'
        include 'devtools_resources.pak'
    }
}

task jcef(dependsOn: [jcefblobs, jcefjars]) {
    doLast {
        println "All jcef artifacts have been exported!!"
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = '5.4.1'
}
